model.Employee.events.onRestrictingQuery = function () {				var resultCollection = ds.Employee.createEntityCollection();								var session = currentSession();				if (session.belongsTo('Admin'))					resultCollection = ds.Employee.all();				else				{					var myInfo = sessionStorage.loginInfo;					if (myInfo!= null)					{						if (myInfo.myEmployeeID != null)						{							var queryString = '';							if (myInfo.myManagerID != null)							{								// my boss								queryString = 'ID = ' + myInfo.myManagerID + ' OR '; 								// my peers and I								queryString += 'manager.ID = ' + myInfo.myManagerID + ' OR ';								//queryString += ' AND ID != ' + myInfo.myEmployeeID + ') OR ';							}							// and my reports							queryString += ' manager.ID = ' + myInfo.myEmployeeID;							resultCollection = ds.Employee.query(queryString);						} 					}				}				return resultCollection;			};model.Employee.fullName.onGet = function () {				var middle = '';				if (this.middle != null)					middle = (this.middle.length > 0 ? ' ' + this.middle : '');				return this.first + middle + ' ' + this.last;			};model.Employee.fullName.onSort = function (ascending) {				if (ascending)					return 'last, first, middle';				else					return 'last desc, first desc, middle desc';			};model.Employee.totalEmployeeSalary.onGet = function () {				return this.directReports.sum('totalEmployeeSalary') + this.salary;			};model.Employee.countEmployees.onGet = function () {				return this.directReports.sum('countEmployees') + 1;			};model.Employee.depth.onGet = function () {				return this.directReports.max('depth') + 1;			};model.Employee.relation.onGet = function () {				var result = '';				var myInfo = sessionStorage.loginInfo;				if (myInfo != null)				{					if ((myInfo.myEmployeeID != null ) && (this.ID == myInfo.myEmployeeID))						result = 'Me';					else if ((myInfo.myManagerID != null ) && (this.ID == myInfo.myManagerID))						result = 'Manager';					else if (this.manager != null)					{						if (this.manager.ID == myInfo.myEmployeeID)							result = 'Report';						else if (this.manager.ID == myInfo.myManagerID)							result = 'Peer';					}				}				return result;			};model.Employee.evaluationComments.events.onSave = function (attributeName) {					var myInfo = sessionStorage.loginInfo;					if (myInfo != null)					{						var theEval = ds.Evaluation.find('byEmployee.ID = :1 AND aboutEmployee.ID = :2', myInfo.myEmployeeID, this.ID);						if (theEval == null)							theEval = new ds.Evaluation({aboutEmployee: this, byEmployee: myInfo.myEmployeeID});						theEval.comments = this.evaluationComments;						theEval.save();							this.evaluationComments = ''; //clear it from the entity										}				};model.Employee.evaluationComments.events.onLoad = function (attributeName) {					var result = '';					var myInfo = sessionStorage.loginInfo;					if  (myInfo != null) 					{						var theEval = ds.Evaluation.find('byEmployee.ID = :1 AND aboutEmployee.ID = :2', myInfo.myEmployeeID, this.ID);						if (theEval != null)							result = theEval.comments;					}					this.evaluationComments = result; //get the value from the evaluation;				};model.Employee.salaryCalc.onGet = function () {				var result = null;				var session = currentSession();				if (session.belongsTo('Admin'))					result = this.salary;				else 				{					if(this.relation == 'Report')						result = this.salary;				}								return result;			};model.Employee.salaryCalc.onSet = function (value) {				var session = currentSession();				if (session.belongsTo('Admin'))					this.salary = value;				else 				{					if(this.relation == 'Report')						this.salary = value;				}							};