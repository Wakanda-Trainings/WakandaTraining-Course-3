model.SalesOrder.events.onValidate = function () {				var error = {error: 0, errorMessage: ''};				var billingContact = this.billingContact;				var shippingContact = this.shippingContact;				var theCustomer = this.customer;				if (theCustomer == null)					error = {error: 101, errorMessage: 'No assigned customer'};				else if (billingContact == null)					error = {error: 102, errorMessage: 'No billing contact'};				else if (shippingContact == null)					error = {error: 103, errorMessage: 'No shipping contact'};				else if (this.orderDate == null)					error = {error: 104, errorMessage: 'No order date'};				else if (theCustomer.contacts.find('ID = :1', billingContact.ID) == null)					error = {error: 105, errorMessage: 'Billing contact invalid for customer'};				else if (theCustomer.contacts.find('ID = :1', shippingContact.ID) == null)					error = {error: 106, errorMessage: 'Shipping contact invalid for customer'};				return error;			};model.SalesOrder.customer.events.onSet = function (attributeName) {					//only runs if the customer was set					var theMods = this.getModifiedAttributes(); //get the modified attributes					if (theMods.indexOf('billingContact') == -1) //if the billingContact wasn't set						this.billingContact = this.customer.billingContact; //copy from the customer					if (theMods.indexOf('shippingContact') == -1) //if the shippingContact wasn't set						this.shippingContact = this.customer.shippingContact; //copy from the customer;				};model.SalesOrder.subtotal.onGet = function () {				return this.salesItems.sum('extended');			};model.SalesOrder.total.onGet = function () {				return this.subtotal + this.shipping + this.tax;			};